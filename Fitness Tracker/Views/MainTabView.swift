//
//  ContentView.swift
//  Fitness Tracker
//
//  Created by Nikita Shestakov on 19.02.2025.
//

import SwiftUI
import CoreData

import SwiftUI
import CoreData


struct MainTabView: View {
    var body: some View {
        TabView {
            HomeView()
                .tabItem {
                    Image(systemName: "house.fill")
                    Text("–ì–ª–∞–≤–Ω–∞—è")
                }

            StatsView()
                .tabItem {
                    Image(systemName: "chart.bar.fill")
                    Text("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                }
            
        }
    }
}

struct StatsView: View {
    
    var body: some View {
        VStack {
            Text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                .font(.largeTitle)
                .bold()
                .padding()

            Text("–ó–¥–µ—Å—å –±—É–¥—É—Ç –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö!")
                .foregroundColor(.gray)
                .padding()
        }
    }
}







//#Preview {
//    ContentView()
//}

// –≠–∫—Ä–∞–Ω —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/–¥–æ–±–∞–≤–ª–µ–Ω–∏—è
struct EditExerciseView: View {
    
    @ObservedObject var viewModel: ExerciseViewModel
    let exercise: ListOfExercises? // nil –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –∏–Ω–∞—á–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    let isEditing: Bool // –§–ª–∞–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
    @Environment(\.dismiss) var dismiss
    
    @State private var name: String = ""
    @State private var descriptions: String = ""
    
    var body: some View {
        NavigationView {
            Form {
                TextField("–ù–∞–∑–≤–∞–Ω–∏–µ", text: $name)
                TextField("–û–ø–∏—Å–∞–Ω–∏–µ", text: $descriptions)
            }
            .navigationTitle(isEditing ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ" : "–î–æ–±–∞–≤–∏—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ")
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å") {
                        if isEditing, let exercise = exercise {
                            // –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            exercise.name = name
                            exercise.descriptions = descriptions
                        } else {
                            // –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                            viewModel.addExercise(name: name, description: descriptions)
                        }
                        viewModel.saveContext() // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        dismiss()
                    }
                    .disabled(name.isEmpty) // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ
                }
            }
            .onAppear {
                // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
                if isEditing, let exercise = exercise {
                    name = exercise.name ?? ""
                    descriptions = exercise.descriptions ?? ""
                    print("–ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤ EditExerciseView: name=\(name), descriptions=\(descriptions)")
                }
            }
        }
    }
}
